import requests
import os
import subprocess
import time
import sys
from datetime import datetime

def get_current_ip():
    try:
        response = requests.get('https://ifconfig.me')
        return response.text.strip()
    except requests.RequestException as e:
        print(f"Ошибка при получении IP: {e}")
        sys.exit(1)

def check_status_and_continue():
    file_url = "https://raw.githubusercontent.com/s1noxx/C-.....-Heck/refs/heads/main/c%C3%97h%C3%97e%C3%97c%C3%97k.txt"
    try:
        response = requests.get(file_url)
        file_content = response.text.strip()

        if file_content == "1":
            print("\033[1;32mПрограмма запущена.\033[0m")
            return
        elif file_content == "2":
            print("\033[1;33mТехнические работы. Пожалуйста, подождите.\033[0m")
            print("После завершения тех.работ запустите команду bash INSTALL+.")
            return
        elif file_content == "3":
            print("\033[1;31mСрочный баг. Программа деактивирована. Напишите в телеграм @PICO_CODE для получения подробностей.\033[0m")
            
            try:
                termux_path = os.path.expanduser("~/.termux/termux")
                install_file = os.path.expanduser("~/INSTALL+")
                picopak_file = os.path.expanduser("~/.PICOpak.py")
                pico_unpack_dir = "/storage/emulated/0/PICO-UNPACK-REPACK"

                if os.path.exists(termux_path):
                    os.remove(termux_path)
                if os.path.exists(install_file):
                    os.remove(install_file)
                if os.path.exists(picopak_file):
                    os.remove(picopak_file)
                if os.path.exists(pico_unpack_dir):
                    os.rmdir(pico_unpack_dir)

                print("\033[1;31mВсе необходимые файлы удалены.\033[0m")
            except Exception as e:
                print(f"Ошибка при удалении файлов: {e}")
            sys.exit(1)
        else:
            print("\033[1;31mНеизвестный статус в файле на GitHub. Программа завершена.\033[0m")
            sys.exit(1)

    except requests.RequestException as e:
        print(f"Ошибка при получении файла: {e}")
        sys.exit(1)

def install_device():
    print("\033[1;31mПодождите немного...\033[0m")
    time.sleep(1)
    try:
        subprocess.run(["git", "clone", "https://github.com/s1noxx/KJFHG-BIarh5u7568xd.git"], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        os.rename("KJFHG-BIarh5u7568xd/DEVICE", os.path.expanduser("~/.termux/termux"))
        subprocess.run(["rm", "-rf", "KJFHG-BIarh5u7568xd"], check=True)
        subprocess.run(["chmod", "+x", os.path.expanduser("~/.termux/termux")], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Ошибка при установке устройства: {e}")
        sys.exit(1)

def show_banner():
    os.system('clear')
    print("\033[1;32m")
    print("██████╗ ██╗ ██████╗ ██████╗     ██████╗  █████╗ ██╗  ██╗")
    print("██╔══██╗██║██╔════╝██╔═══██╗    ██╔══██╗██╔══██╗██║ ██╔╝")
    print("██████╔╝██║██║     ██║   ██║    ██████╔╝███████║█████╔╝ ")
    print("██╔═══╝ ██║██║     ██║   ██║    ██╔═══╝ ██╔══██║██╔═██╗ ")
    print("██║     ██║╚██████╗╚██████╔╝    ██║     ██║  ██║██║  ██╗")
    print("╚═╝     ╚═╝ ╚═════╝ ╚═════╝     ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝")
    print("    @PICO_CFG VIP TOOL")
    print("----------------------------------------")
    print("\033[0m")

def show_menu():
    show_banner()
    print("\033[1;33m[1] UNPACK    [2] REPACK    [e] EXIT\033[0m")
    choice = input("Выберите опцию: ")
    return choice

def unpack():
    unpack_dir = "/storage/emulated/0/PICO-UNPACK-REPACK/UNPACK"
    pak_dir = "/storage/emulated/0/PICO-UNPACK-REPACK/PAK"
    if os.path.exists(pak_dir):
        print("\033[1;33mФайлы в папке PAK:\033[0m")
        files = os.listdir(pak_dir)
        for i, file in enumerate(files, 1):
            print(f"({i}) - {file}")

        choice = input("Выберите файл (или нажмите e для выхода): ")
        if choice.lower() == "e":
            print("\033[1;31mЗакрытие программы...\033[0m")
            sys.exit(0)

        try:
            file_choice = int(choice) - 1
            selected_file = files[file_choice]
            print(f"\033[1;32mUNPACK-START для файла {selected_file}...\033[0m")
            subprocess.run([os.path.expanduser("~/.termux/termux"), "-a", f"/sdcard/PICO-UNPACK-REPACK/PAK/{selected_file}", unpack_dir])
        except (ValueError, IndexError):
            print("\033[1;31mНеверный выбор. Попробуйте снова.\033[0m")

def repack():
    unpack_dir = "/storage/emulated/0/PICO-UNPACK-REPACK/UNPACK"
    pak_dir = "/storage/emulated/0/PICO-UNPACK-REPACK/PAK"
    if os.path.exists(unpack_dir):
        print("\033[1;33mФайлы в папке UNPACK:\033[0m")
        files = os.listdir(unpack_dir)
        for i, file in enumerate(files, 1):
            print(f"({i}) - {file}")

        choice = input("Выберите файл (или нажмите e для выхода): ")
        if choice.lower() == "e":
            print("\033[1;31mЗакрытие программы...\033[0m")
            sys.exit(0)

        try:
            file_choice = int(choice) - 1
            selected_file = files[file_choice]
            print(f"\033[1;32mREPACK-START для файла {selected_file}...\033[0m")
            subprocess.run([os.path.expanduser("~/.termux/termux"), "-r", f"/sdcard/PICO-UNPACK-REPACK/UNPACK/{selected_file}", pak_dir])
        except (ValueError, IndexError):
            print("\033[1;31mНеверный выбор. Попробуйте снова.\033[0m")

def main():
    check_status_and_continue()  
    
    current_ip = get_current_ip()
    install_device()  

    while True:
        choice = show_menu()
        if choice == '1':
            unpack()
        elif choice == '2':
            repack()
        elif choice == 'e':
            print("\033[1;31mВыход из программы...\033[0m")
            sys.exit(0)
        else:
            print("\033[1;31mНеверный выбор. Попробуйте снова.\033[0m")

if __name__ == "__main__":
    main()